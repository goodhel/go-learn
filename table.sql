CREATE TABLE user (
	id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	username VARCHAR(150) NULL,
	email VARCHAR(200) NOT NULL UNIQUE,
	password VARCHAR(255) NOT NULL,
	created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE user_balance (
	id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	userId INT NOT NULL,
	balance BIGINT NOT NULL,
	balanceAchieve BIGINT NOT NULL,
	created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	INDEX userId(userId) USING BTREE,
	FOREIGN KEY (userId) REFERENCES user(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE user_balance_history (
	id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	userBalanceId INT NOT NULL,
	balanceBefore BIGINT NOT NULL,
	balanceAfter BIGINT NOT NULL,
	activity VARCHAR(100) NULL,
	type ENUM('debit', 'kredit') NOT NULL,
	ip VARCHAR(30) NULL,
	location VARCHAR(100) NULL,
	userAgent VARCHAR(150) NULL,
	author VARCHAR(150) NULL,
	created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	INDEX userBalanceId(userBalanceId) USING BTREE,
	FOREIGN KEY (userBalanceId) REFERENCES user_balance(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE bank_balance (
	id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	balance BIGINT NOT NULL,
	balance_achieve BIGINT NOT NULL,
	code VARCHAR(70) NOT NULL,
	enable SMALLINT NOT NULL DEFAULT 0,
	created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE bank_balance_history (
	id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	bankBalanceId INT NOT NULL,
	balanceBefore BIGINT NOT NULL,
	balanceAfter BIGINT NOT NULL,
	activity VARCHAR(100) NULL,
	type ENUM('debit', 'kredit') NOT NULL,
	ip VARCHAR(30) NULL,
	location VARCHAR(100) NULL,
	userAgent VARCHAR(150) NULL,
	author VARCHAR(150) NULL,
	created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	INDEX bankBalanceId(bankBalanceId) USING BTREE,
	FOREIGN KEY (bankBalanceId) REFERENCES bank_balance(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE token (
	userId INT NOT NULL,
	accessId VARCHAR(150) NOT NULL,
	refresh_token TEXT NOT NULL,
	platfrom VARCHAR(100) NULL,
	created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	INDEX userId(userId) USING BTREE,
	FOREIGN KEY (userId) REFERENCES user(id) ON UPDATE CASCADE ON DELETE CASCADE
);
